<div>
  <h1 class="cart__h1">You are gonna take this!</h1>
  <br>
</div>

<table id="cartsTable" role="grid" class="carts__dashboard">
  <thead class="table__header">
    <tr>
      <th>Product</th>
      <th>Description</th>
      <th>Price</th>
      <th>Quantity</th>
      <th>Stock</th>
      <th>Category</th>
    </tr>
  </thead>
  <tbody class="table__body">
    {{#each cart.products}}
      <tr>
        <td>{{this.product_id.title}}</td>
        <td>{{this.product_id.description}}</td>
        <td>$ {{this.product_id.price}}</td>
        <td>{{this.quantity}}</td>
        <td>{{this.product_id.stock}}</td>
        <td>{{this.product_id.category}}</td>
      </tr>
    {{/each}}
  </tbody>
  <tbody class="table__body">
    <tr>
      <td>Precio Total: $</td>
      <td><span id="totalPricePlaceholder"></span></td>
    </tr>
  </tbody>
</table>
<button onclick="location.href='/carts/purchase'" id="buyBtn" class="buy__button" method="POST">Buy Now!</button>

<script>
  // Obtengo una referencia al marcador de posición del precio total en el HTML.
  const totalPricePlaceholder = document.getElementById('totalPricePlaceholder');

  if(cart.products.length <= 0){
        throw new Exception('Empty cart', 404);
    } else {

      const purchasedProducts = [];
      const returnedProducts = [];
      
      for (const item of cart.products) {
        const product = item.product_id;
        const quantity = item.quantity;
        
        if (product.stock >= quantity) {
          product.stock -= quantity;
          await product.save();
          purchasedProducts.push(item);
        } else {
            returnedProducts.push(item);
        }
      }
  // Función para calcular el precio total.
  const totalPrice = calculateTotal(purchasedProducts) 

  // Actualiza el marcador de posición con el precio total calculado.
  totalPricePlaceholder.textContent = totalPrice.toFixed(2); // Asegura que se muestren dos decimales.


</script> 